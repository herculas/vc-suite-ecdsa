import type { JsonValue, LabelMap, NQuad } from "@herculas/vc-data-integrity"

export type CompressedLabelMap = Map<number, Uint8Array>

/**
 * A base proof value generated by the issuer.
 */
export type BaseProofValue = {
  baseSignature: Uint8Array
  publicKey: Uint8Array
  hmacKey: Uint8Array
  signatures: Array<Uint8Array>
  mandatoryPointers: Array<string>
}

export type CompressedProofValue = {
  baseSignature: Uint8Array
  publicKey: Uint8Array
  signatures: Array<Uint8Array>
  compressedLabelMap: Map<number, Uint8Array>
  mandatoryIndexes: Array<number>
}

/**
 * A derived proof value generated by the holder.
 */
export type DerivedProofValue = {
  baseSignature: Uint8Array
  publicKey: Uint8Array
  signatures: Array<Uint8Array>
  labelMap: LabelMap
  mandatoryIndexes: Array<number>
}

export type DisclosureData = {
  baseSignature: Uint8Array
  publicKey: Uint8Array
  signatures: Array<Uint8Array>
  labelMap: LabelMap
  mandatoryIndexes: Array<number>
  revealDocument: JsonValue
}

export type VerifyData = {
  baseSignature: Uint8Array
  proofHash: Uint8Array
  publicKey: Uint8Array
  signatures: Array<Uint8Array>
  nonMandatory: Array<NQuad>
  mandatoryHash: Uint8Array
}
